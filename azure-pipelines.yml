trigger:
  - "*"

pool:
  vmImage: "ubuntu-18.04"
  demands:
    - npm

variables:
  buildConfiguration: "Release"
  dotnetSdkVersion: 3.1.300
  wwwrootDir: "Tailspin.SpaceGame.web/wwwroot"

steps:
  - task: UseDotNet@2
    displayName: "Use .NET Core SDK $(dotnetSdkVersion)"
    inputs:
      version: "$(dotnetSdkVersion)"

  - task: NuGetInstaller@0
    inputs:
      versionSpec: 5.6.0

  - task: Npm@1
    displayName: "Run npm install"
    inputs:
      verbose: false

  - script: "./node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)"
    displayName: "Compile Sass assets"

  - task: gulp@1
    displayName: "Run gulp tasks"

  - script: "echo '$(Build.DefinitionName), $(Build.Build), $(Build.BuildNumber)' > buildInfo.txt"
    displayName: "Write build info"
    workingDirectory: "$(wwwrootDir)"

  - task: NuGetCommand@2
    displayName: "Restore project dependencies"
    inputs:
      command: "restore"
      restoreSolution: "**/*.sln"
      feedsToUse: "select"
      vstsFeeds: "SpaceGame - Dependencies/Tailspin.SpaceGame.Web.Models"

  - task: DotNetCoreCLI@2
    displayName: "Build the project - $(buildConfiguration)"
    inputs:
      command: "build"
      arguments: "--no-restore --configuration $(buildConfiguration)"
      projects: "**/*.csproj"

  - task: DotNetCoreCLI@2
    displayName: "Publish the project - $(buildConfiguration)"
    inputs:
      command: "publish"
      projects: "**/*.csproj"
      publishWebProjects: false
      arguments: "--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)"
      zipAfterPublish: true

  - task: PublishBuildArtifact@1
    displayName: "Publish artifact: drop"
    condition: succeeded()
